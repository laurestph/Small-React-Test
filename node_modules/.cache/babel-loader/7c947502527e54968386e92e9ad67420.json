{"ast":null,"code":"var _jsxFileName = \"/home/mounokle/Documents/programmation/langage/React/Test React Laure Stephan/test_react_laure/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from \"axios\";\nimport Searcher from \"./components/Searcher\";\nimport ImageList from \"./components/ImageList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const jumbotron = useRef(null);\n  useEffect(() => {\n    const consultAPI = async () => {\n      const per_page = 30;\n      const key = \"14232166-22b4a3d158dfb8902f1af9215\";\n      const res = await axios.get(\"https://pixabay.com/api/\", {\n        params: {\n          key,\n          per_page,\n          q: search,\n          page\n        }\n      });\n      setImages(res.data.hits);\n      setTotalPages(Math.ceil(res.data.totalHits / res.data.hits.length));\n      jumbotron.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    };\n\n    if (search === \"\") return;\n    consultAPI();\n  }, [search, page]);\n\n  const previousPage = () => {\n    const newPage = page - 1;\n    setPage(newPage);\n  };\n\n  const nextPage = () => {\n    const newPage = page + 1;\n    setPage(newPage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jumbotron\",\n      ref: jumbotron,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead text-center\",\n        children: \"Searcher of Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Searcher, {\n        setSearch: setSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(ImageList, {\n        images: images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), page > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: previousPage,\n        className: \"btn btn-info mr-1\",\n        children: \"\\xAB Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), page !== totalPages && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        className: \"btn btn-info\",\n        children: \"Next \\xBB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cgVig3/cfIY/+xQjHX0S/zTgBtU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mounokle/Documents/programmation/langage/React/Test React Laure Stephan/test_react_laure/src/components/App.js"],"names":["React","useState","useEffect","useRef","axios","Searcher","ImageList","App","search","setSearch","images","setImages","page","setPage","totalPages","setTotalPages","jumbotron","consultAPI","per_page","key","res","get","params","q","data","hits","Math","ceil","totalHits","length","current","scrollIntoView","behavior","block","previousPage","newPage","nextPage"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from \"axios\";\n\nimport Searcher from \"./components/Searcher\";\nimport ImageList from \"./components/ImageList\";\n\nfunction App() {\n\n  const [search, setSearch] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const jumbotron = useRef(null);\n\n  useEffect(() => {\n    const consultAPI = async () => {\n      const per_page = 30;\n      const key = \"14232166-22b4a3d158dfb8902f1af9215\";\n      const res = await axios.get(\"https://pixabay.com/api/\", {\n        params: {\n          key,\n          per_page,\n          q: search,\n          page\n        }\n      })\n\n      setImages(res.data.hits);\n      setTotalPages(Math.ceil(res.data.totalHits / res.data.hits.length));\n\n      jumbotron.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      })\n\n    }\n\n    if (search === \"\") return;\n\n    consultAPI();\n\n  }, [search, page]);\n\n  const previousPage = () => {\n    const newPage = page - 1;\n    setPage(newPage);\n  }\n\n  const nextPage = () => {\n    const newPage = page + 1;\n    setPage(newPage);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron\" ref={jumbotron} >\n        <p className=\"lead text-center\">\n          Searcher of Images\n        </p>\n        <Searcher setSearch={setSearch} />\n      </div>\n\n      <div className=\"row justify-content-center mb-5\">\n        <ImageList images={images} />\n        {\n          page > 1 && (\n            <button onClick={previousPage} className=\"btn btn-info mr-1\">\n              &laquo; Previous\n            </button>\n          )\n        }\n        {\n          page !== totalPages && (\n            <button onClick={nextPage} className=\"btn btn-info\">\n              Next &raquo;\n            </button>\n          )\n        }\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}